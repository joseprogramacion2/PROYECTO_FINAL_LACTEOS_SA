
package proyecto_final_grupo1;


import Conexion.conexion;// Importa la clase 'conexion' desde el paquete 'Conexion'
import java.sql.SQLException;// Importa la clase 'SQLException' desde el paquete 'java.sql'
import java.sql.*;// Importa todas las clases del paquete 'java.sql'
import java.sql.Connection;// Importa la clase 'Connection' desde el paquete 'java.sql'
import java.util.logging.Level;// Importa la clase 'Level' desde el paquete 'java.util.logging'
import java.util.logging.Logger;// Importa la clase 'Logger' desde el paquete 'java.util.logging'
import javax.swing.JOptionPane;// Importa la clase 'JOptionPane' desde el paquete 'javax.swing'
import javax.swing.table.DefaultTableModel;// Importa la clase 'DefaultTableModel' desde el paquete 'javax.swing.table'

public class ELIMINAR extends javax.swing.JFrame {
    conexion con = new conexion();// Crea una instancia de la clase 'conexion'
    Connection cn = con.conectar();// Establece una conexión utilizando el método 'conectar' de la instancia 'con'
    PreparedStatement ps;// Declaración de variable para preparar una sentencia SQL
    ResultSet rs;// Declaración de variable para almacenar el resultado de una consulta
   
  
    // Método para limpiar los campos de búsqueda
    public void limpiar(){
        txtbuscartodo.setText("");   
    }
  
            
    // Constructor de la clase ELIMINAR
    public ELIMINAR() {
        initComponents();// Inicializa los componentes de la interfaz gráfica
        setLocationRelativeTo(null);// Centra la ventana en la pantalla
        Mostrar("");// Llama al método 'Mostrar' pasando una cadena vacía como parámetro para mostrar todos los registros en la tabla
         
    }
    private void LimpiarCajas(){
        txtbuscartodo.setText(null);// Limpia el contenido del campo de texto 'txtbuscartodo' estableciéndolo como nulo
                
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtbuscartodo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        btneliminar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ELIMINAR PRODUCTO");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Codigo de Producto:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, -1, -1));

        txtbuscartodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbuscartodoActionPerformed(evt);
            }
        });
        txtbuscartodo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbuscartodoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscartodoKeyTyped(evt);
            }
        });
        jPanel2.add(txtbuscartodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, 120, -1));

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo de Producto", "Codigo de Producto", "Cantidad", "Fecha de Ingreso", "Fecha de Vencimiento"
            }
        ));
        Tabla.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                TablaAncestorMoved(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(Tabla);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 640, 160));

        btneliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btneliminar.setText("ELIMINAR ");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });
        jPanel2.add(btneliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, -1, -1));

        buscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buscar.setText("BUSCAR");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        jPanel2.add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, -1, 20));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pngtree-health-and-vitality-milk-dairy-products-poster-background-material-image_126084.jpg"))); // NOI18N
        jPanel2.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -120, 320, 480));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pngtree-health-and-vitality-milk-dairy-products-poster-background-material-image_126084.jpg"))); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, -230, 460, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.toBack();// Envía la ventana actual al fondo, detrás de otras ventanas
        setVisible(false);// Hace que la ventana actual no sea visible
        new MENU().toFront();// Crea una nueva instancia de la clase 'MENU' y la coloca al frente, por encima de otras ventanas
        new MENU().setState(java.awt.Frame.NORMAL);// Establece el estado de la nueva instancia de 'MENU' como normal
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TablaAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TablaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaAncestorMoved

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
     Borrar();
    }//GEN-LAST:event_btneliminarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        
     Buscar();
    }//GEN-LAST:event_buscarActionPerformed

    private void txtbuscartodoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscartodoKeyPressed
         
    }//GEN-LAST:event_txtbuscartodoKeyPressed

    private void txtbuscartodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbuscartodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbuscartodoActionPerformed

    private void txtbuscartodoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscartodoKeyTyped
  
    }//GEN-LAST:event_txtbuscartodoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ELIMINAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ELIMINAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ELIMINAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ELIMINAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ELIMINAR().setVisible(true);
            }
        });
    }


public void Mostrar(String Tipo_Producto){
    DefaultTableModel modelo=new DefaultTableModel();// Crea un nuevo modelo de tabla por defecto
    modelo.addColumn("Tipo de Producto");// Agrega una columna al modelo con el encabezado "Tipo de Producto"
    modelo.addColumn("Codigo de Producto");// Agrega una columna al modelo con el encabezado "Codigo de Producto"
    modelo.addColumn("Cantidad");// Agrega una columna al modelo con el encabezado "Cantidad"
    modelo.addColumn("Fecha de Ingreso");// Agrega una columna al modelo con el encabezado "Cantidad"
    modelo.addColumn("Fecha de Vencimiento");// Agrega una columna al modelo con el encabezado "Fecha de Vencimiento"
    Tabla.setModel(modelo);// Asigna el modelo de tabla al componente de la interfaz gráfica llamado 'Tabla'
    String sql="";// Variable para almacenar la consulta SQL
    if(Tipo_Producto.equals("")){// Verifica si el parámetro 'Tipo_Producto' está vacío
        sql="Select*from lacteos";// Consulta para seleccionar todos los registros de la tabla 'lacteos'
    }else{
        sql="Select*from lacteos where Tipo_Producto like'%"+Tipo_Producto+"%'"; // Consulta para seleccionar los registros de la tabla 'lacteos' que coincidan con el tipo de producto especificado en 'Tipo_Producto'
    }
    String lacteos[]=new String[5];// Arreglo de cadenas para almacenar los datos de cada registro
    Statement set;
    try {
        set = cn.createStatement(); // Crea un objeto Statement para ejecutar consultas SQL
        ResultSet resul=set.executeQuery(sql);// Ejecuta la consulta SQL y obtiene el resultado en un objeto ResultSet
        while(resul.next()){// Itera sobre los resultados del ResultSet
            lacteos[0]=resul.getString(1);// Almacena el valor del primer campo en el arreglo lacteos en la posición 0
              lacteos[1]=resul.getString(2);// Almacena el valor del primer campo en el arreglo lacteos en la posición 1
                lacteos[2]=resul.getString(3);  // Almacena el valor del primer campo en el arreglo lacteos en la posición 2
                   lacteos[3]=resul.getString(4);// Almacena el valor del primer campo en el arreglo lacteos en la posición 3
                        lacteos[4]=resul.getString(5);// Almacena el valor del primer campo en el arreglo lacteos en la posición 4
                            modelo.addRow(lacteos);// Agrega una nueva fila al modelo de tabla con los valores almacenados en el arreglo lacteos
                  
                
        }
        Tabla.setModel(modelo);
    } catch (SQLException ex) {
        // Manejo de excepciones de SQL
        Logger.getLogger(ELIMINAR.class.getName()).log(Level.SEVERE, null, ex);
    }
   
    
}
 
public void Borrar(){
    int fila=Tabla.getSelectedRow();// Obtiene el índice de la fila seleccionada en la tabla
    String Codigo_Producto=Tabla.getValueAt(fila,1).toString();// Obtiene el valor de la columna 'Codigo de Producto' de la fila seleccionada
    int n=JOptionPane.showConfirmDialog(null,"Desea eliminar producto","ELIMINAR",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);// Muestra un cuadro de diálogo de confirmación para eliminar el producto
    if(n==JOptionPane.YES_NO_OPTION){
    try {
        PreparedStatement borrar=cn.prepareStatement("Delete from lacteos where Codigo_Producto='"+Codigo_Producto+"'");// Prepara una sentencia SQL para eliminar el producto con el código especificado
        borrar.executeUpdate();
        Mostrar("");
    } catch (SQLException ex) {
        Logger.getLogger(ELIMINAR.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
}
public void Buscar(){  
      String campo = txtbuscartodo.getText();// Obtiene el texto ingresado en el campo de búsqueda
        String where = "";// Variable para almacenar la condición de búsqueda

        if(!"".equals(campo))// Verifica si el campo de búsqueda no está vacío
        {
            where = "WHERE Codigo_Producto = '"+ campo + "'"; // Define la condición de búsqueda para buscar registros con el código de producto especificado
        }
        try{
            DefaultTableModel modelo=new DefaultTableModel();// Crea un nuevo modelo de tabla
            Tabla.setModel(modelo);
            String sql = "SELECT Tipo_Producto, Codigo_Producto, Cantidad, Fecha_de_Ingreso, Fecha_de_Vencimiento FROM lacteos " + where;

            System.out.println(sql);// Imprime la consulta SQL en la consola

            ps =cn.prepareStatement(sql); // Prepara una sentencia SQL utilizando la consulta construida anteriormente
            rs =ps.executeQuery();// Ejecuta la consulta SQL y obtiene el resultado en un objeto ResultSet
            ResultSetMetaData rsMd= rs.getMetaData();// Ejecuta la consulta SQL y obtiene el resultado en un objeto ResultSet
            int cantidadColumnas =rsMd.getColumnCount(); // Obtiene la cantidad de columnas en el resultado de la consulta
            modelo.addColumn("Tipo de Producto");// Agrega una columna al modelo con el encabezado "Tipo de Producto"
            modelo.addColumn("Codigo de Producto");// Agrega una columna al modelo con el encabezado "Codigo de Producto"
            modelo.addColumn("Cantidad"); // Agrega una columna al modelo con el encabezado "Cantidad"   
            modelo.addColumn("Fecha de Ingreso"); // Agrega una columna al modelo con el encabezado "Fecha de Ingreso"
            modelo.addColumn("Fecha de Vencimiento");// Agrega una columna al modelo con el encabezado "Fecha de Vencimiento"
            while(rs.next()){
                Object [] filas = new Object[cantidadColumnas];
                for(int i = 0; i< cantidadColumnas; i++){
                    filas [i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);// Agrega una nueva fila al modelo de tabla con los valores almacenados en el arreglo filas
                
                
            } 
        LimpiarCajas();// Llama al método LimpiarCajas para limpiar las cajas de texto u otros elementos
        }catch(SQLException ex){
       
            System.err.println(ex.toString());  // Imprime el mensaje de error en la consola de error
    }        
       
 }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable Tabla;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton buscar;
    private javax.swing.JLabel fondo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtbuscartodo;
    // End of variables declaration//GEN-END:variables
}
